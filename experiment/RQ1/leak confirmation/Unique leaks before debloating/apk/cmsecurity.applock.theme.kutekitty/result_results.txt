Results from file: result.xml
Source Method: <com.ijinshan.common.kinfoc.r: void b()>
Source Statement: $r1 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r2, 0, $r5, 0)
Sink Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
Sink Statement: virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)
Taint Path:
  Step 1: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: $r1 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r2, 0, $r5, 0)
  Step 2: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: r0.<com.ijinshan.common.kinfoc.r: android.app.PendingIntent p> = $r1
  Step 3: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: r0 := @this: com.ijinshan.common.kinfoc.r
  Step 4: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void e()>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.r h>
  Step 5: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void e()>
    Statement: r0 := @this: com.ijinshan.common.kinfoc.KInfocClient
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.main.MainApplication: void onCreate()>
    Statement: $r10 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>(r0)
  Step 7: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 8: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: return $r1
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.main.MainApplication: void onCreate()>
    Statement: return
  Step 10: 
    Method: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
    Statement: staticinvoke <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>(null)
  Step 11: 
    Method: <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>
    Statement: virtualinvoke $r0.<com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
  Step 12: 
    Method: <com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void onReceive(android.content.Context,android.content.Intent)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void delayReport(android.content.Context,com.cleanmaster.security.applock.theme.c.c)>($r1, $r8)
  Step 13: 
    Method: <com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void delayReport(android.content.Context,com.cleanmaster.security.applock.theme.c.c)>
    Statement: virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 500L)
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.b: void run()>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>($r1)
  Step 15: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 16: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: if $r1 != null goto $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 17: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: specialinvoke $r1.<com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>($r0)
  Step 18: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a> = $r1
  Step 19: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 20: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r3 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>($r1)
  Step 21: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>($r0)
  Step 22: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: if $r0 != null goto $r2 = newarray (byte)[255]
  Step 23: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)

==================================================
Source Method: <com.ijinshan.common.kinfoc.l: void run()>
Source Statement: $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage()>()
Sink Method: <com.ijinshan.common.kinfoc.l: void run()>
Sink Statement: virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2)
Taint Path:
  Step 1: 
    Method: <com.ijinshan.common.kinfoc.l: void run()>
    Statement: $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage()>()
  Step 2: 
    Method: <com.ijinshan.common.kinfoc.l: void run()>
    Statement: virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2)

==================================================
Source Method: <com.ijinshan.common.kinfoc.r: void b()>
Source Statement: $r1 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r2, 0, $r5, 0)
Sink Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
Sink Statement: virtualinvoke $r12.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)
Taint Path:
  Step 1: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: $r1 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r2, 0, $r5, 0)
  Step 2: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: r0.<com.ijinshan.common.kinfoc.r: android.app.PendingIntent p> = $r1
  Step 3: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: r0 := @this: com.ijinshan.common.kinfoc.r
  Step 4: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void e()>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.r h>
  Step 5: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void e()>
    Statement: r0 := @this: com.ijinshan.common.kinfoc.KInfocClient
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.main.MainApplication: void onCreate()>
    Statement: $r10 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>(r0)
  Step 7: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: specialinvoke $r1.<com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>($r0)
  Step 8: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.r h> = $r5
  Step 9: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: specialinvoke $r5.<com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>($r1, $r4)
  Step 10: 
    Method: <com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>
    Statement: specialinvoke $r9.<com.ijinshan.common.kinfoc.x: void <init>(com.ijinshan.common.kinfoc.r)>(r0)
  Step 11: 
    Method: <com.ijinshan.common.kinfoc.x: void <init>(com.ijinshan.common.kinfoc.r)>
    Statement: r0.<com.ijinshan.common.kinfoc.x: com.ijinshan.common.kinfoc.r a> = $r1
  Step 12: 
    Method: <com.ijinshan.common.kinfoc.x: void <init>(com.ijinshan.common.kinfoc.r)>
    Statement: return
  Step 13: 
    Method: <com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>
    Statement: r0.<com.ijinshan.common.kinfoc.r: java.lang.Runnable w> = $r9
  Step 14: 
    Method: <com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>
    Statement: return
  Step 15: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.r h> = $r5
  Step 16: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: return
  Step 17: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j> = $r1
  Step 18: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: return $r1
  Step 19: 
    Method: <com.cleanmaster.security.applock.theme.main.MainApplication: void onCreate()>
    Statement: return
  Step 20: 
    Method: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
    Statement: staticinvoke <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>(null)
  Step 21: 
    Method: <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>
    Statement: virtualinvoke $r0.<com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
  Step 22: 
    Method: <com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void onReceive(android.content.Context,android.content.Intent)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void delayReport(android.content.Context,com.cleanmaster.security.applock.theme.c.c)>($r1, $r8)
  Step 23: 
    Method: <com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void delayReport(android.content.Context,com.cleanmaster.security.applock.theme.c.c)>
    Statement: virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 500L)
  Step 24: 
    Method: <com.cleanmaster.security.applock.theme.main.b: void run()>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>($r1)
  Step 25: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 26: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: if $r1 != null goto $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 27: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = new com.ijinshan.common.kinfoc.KInfocClient
  Step 28: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: specialinvoke $r1.<com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>($r0)
  Step 29: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 30: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r3 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>($r1)
  Step 31: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>($r0)
  Step 32: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: if $r0 != null goto $r2 = newarray (byte)[255]
  Step 33: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r12.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)

==================================================
Source Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
Source Statement: $r6 = virtualinvoke $r4.<java.util.Locale: java.lang.String getCountry()>()
Sink Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
Sink Statement: virtualinvoke $r12.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r6 = virtualinvoke $r4.<java.util.Locale: java.lang.String getCountry()>()
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: return $r6
  Step 5: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r4 = $r2
  Step 6: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 7: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 8: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: return $r2
  Step 9: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: java.lang.String c> = $r3
  Step 10: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: return
  Step 11: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j> = $r1
  Step 12: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: throw $r2
  Step 13: 
    Method: <com.cleanmaster.security.applock.theme.main.MainApplication: void onCreate()>
    Statement: return
  Step 14: 
    Method: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
    Statement: staticinvoke <dummyMainClass: com.cleanmaster.security.applock.theme.main.ThemeMainActivity dummyMainMethod_com_cleanmaster_security_applock_theme_main_ThemeMainActivity(android.content.Intent)>(null)
  Step 15: 
    Method: <dummyMainClass: com.cleanmaster.security.applock.theme.main.ThemeMainActivity dummyMainMethod_com_cleanmaster_security_applock_theme_main_ThemeMainActivity(android.content.Intent)>
    Statement: virtualinvoke $r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>(null)
  Step 16: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initRecommend(boolean,android.content.pm.PackageInfo)>(0, null)
  Step 17: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initRecommend(boolean,android.content.pm.PackageInfo)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void delayReport(com.cleanmaster.security.applock.theme.c.c,boolean)>($r15, 0)
  Step 18: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void delayReport(com.cleanmaster.security.applock.theme.c.c,boolean)>
    Statement: virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 500L)
  Step 19: 
    Method: <com.cleanmaster.security.applock.theme.main.i: void run()>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>($r1)
  Step 20: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 21: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: if $r1 != null goto $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 22: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = new com.ijinshan.common.kinfoc.KInfocClient
  Step 23: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: specialinvoke $r1.<com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>($r0)
  Step 24: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 25: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r3 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>($r1)
  Step 26: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>($r0)
  Step 27: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: if $r0 != null goto $r2 = newarray (byte)[255]
  Step 28: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r12.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)

==================================================
Source Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
Source Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
Sink Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
Sink Statement: virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("cms.applock.theme.intent.action.LAUNCH_H5_THEME_STORE")
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: if $r2 == null goto return $r1
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r12.<com.cleanmaster.security.applock.theme.c.b: java.lang.String b> = $r11
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12)
  Step 5: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: return $r1
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>()
  Step 7: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
  Step 8: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r4 = (com.cleanmaster.security.applock.theme.c.b) $r3
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: return $r4
  Step 10: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: if $r3 != null goto $r2 = "com.cleanmaster.security"
  Step 11: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: $z0 = specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: boolean checkPackageExistence(java.lang.String)>("com.cleanmaster.security")
  Step 12: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: boolean checkPackageExistence(java.lang.String)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void createThemeStoreShortcut()>()
  Step 13: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void createThemeStoreShortcut()>
    Statement: interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r1)
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("cms.applock.theme.intent.action.LAUNCH_H5_THEME_STORE")

==================================================
Source Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
Source Statement: $r6 = virtualinvoke $r4.<java.util.Locale: java.lang.String getCountry()>()
Sink Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
Sink Statement: virtualinvoke $r13.<java.io.FileOutputStream: void write(byte[],int,int)>($r2, 0, $i0)
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r6 = virtualinvoke $r4.<java.util.Locale: java.lang.String getCountry()>()
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: return $r6
  Step 5: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: if $r2 != null goto virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 6: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r4 = ""
  Step 7: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 8: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 9: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: return $r2
  Step 10: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: java.lang.String c> = $r3
  Step 11: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: return
  Step 12: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j> = $r1
  Step 13: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: return $r1
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.MainApplication: void onCreate()>
    Statement: return
  Step 15: 
    Method: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
    Statement: staticinvoke <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>(null)
  Step 16: 
    Method: <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>
    Statement: virtualinvoke $r0.<com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
  Step 17: 
    Method: <com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void onReceive(android.content.Context,android.content.Intent)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void delayReport(android.content.Context,com.cleanmaster.security.applock.theme.c.c)>($r1, $r8)
  Step 18: 
    Method: <com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void delayReport(android.content.Context,com.cleanmaster.security.applock.theme.c.c)>
    Statement: virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 500L)
  Step 19: 
    Method: <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
    Statement: interfaceinvoke param0.<java.lang.Runnable: void run()>()
  Step 20: 
    Method: <com.cleanmaster.security.applock.theme.main.i: void run()>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>($r1)
  Step 21: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 22: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: if $r1 != null goto $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 23: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: specialinvoke $r1.<com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>($r0)
  Step 24: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a> = $r1
  Step 25: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 26: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: specialinvoke $r4.<com.ijinshan.common.kinfoc.j: void <init>(android.content.Context,java.lang.String)>($r1, $r3)
  Step 27: 
    Method: <com.ijinshan.common.kinfoc.j: void <init>(android.content.Context,java.lang.String)>
    Statement: $r2 = staticinvoke <com.cleanmaster.security.applock.theme.c.j: java.lang.String a(android.content.Context)>($r1)
  Step 28: 
    Method: <com.cleanmaster.security.applock.theme.c.j: java.lang.String a(android.content.Context)>
    Statement: return $r2
  Step 29: 
    Method: <com.ijinshan.common.kinfoc.j: void <init>(android.content.Context,java.lang.String)>
    Statement: r0 := @this: com.ijinshan.common.kinfoc.j
  Step 30: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 31: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 32: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: specialinvoke $r5.<com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>($r1, $r4)
  Step 33: 
    Method: <com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>
    Statement: return
  Step 34: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 35: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 36: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r3 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>($r1)
  Step 37: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>($r0)
  Step 38: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: if $r0 != null goto $r2 = newarray (byte)[255]
  Step 39: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r13.<java.io.FileOutputStream: void write(byte[],int,int)>($r2, 0, $i0)

==================================================
Source Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
Source Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
Sink Method: <com.cleanmaster.security.applock.a.a: void b(java.lang.String,boolean)>
Sink Statement: $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0)
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: if $r2 == null goto return $r1
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r12 = new com.cleanmaster.security.applock.theme.c.b
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12)
  Step 5: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: return $r1
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>()
  Step 7: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
  Step 8: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r4 = (com.cleanmaster.security.applock.theme.c.b) $r3
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: return $r4
  Step 10: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: if $r3 != null goto $r2 = "com.cleanmaster.security"
  Step 11: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initRecommend(boolean,android.content.pm.PackageInfo)>(0, null)
  Step 12: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initRecommend(boolean,android.content.pm.PackageInfo)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void createThemeStoreShortcut()>()
  Step 13: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void createThemeStoreShortcut()>
    Statement: interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r1)
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r1.<com.cleanmaster.security.applock.a.a: void h()>()
  Step 15: 
    Method: <com.cleanmaster.security.applock.a.a: void h()>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.a.a: void b(java.lang.String,boolean)>("key_theme_store_shortcut_created", 1)
  Step 16: 
    Method: <com.cleanmaster.security.applock.a.a: void b(java.lang.String,boolean)>
    Statement: $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0)

==================================================
Source Method: <com.ijinshan.common.kinfoc.r: void b()>
Source Statement: $r1 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r2, 0, $r5, 0)
Sink Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
Sink Statement: virtualinvoke $r13.<java.io.FileOutputStream: void write(byte[],int,int)>($r2, 0, $i0)
Taint Path:
  Step 1: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: $r1 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r2, 0, $r5, 0)
  Step 2: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: r0.<com.ijinshan.common.kinfoc.r: android.app.PendingIntent p> = $r1
  Step 3: 
    Method: <com.ijinshan.common.kinfoc.r: void b()>
    Statement: r0 := @this: com.ijinshan.common.kinfoc.r
  Step 4: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void e()>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.r h>
  Step 5: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void e()>
    Statement: r0 := @this: com.ijinshan.common.kinfoc.KInfocClient
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.main.MainApplication: void onCreate()>
    Statement: $r10 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>(r0)
  Step 7: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: specialinvoke $r1.<com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>($r0)
  Step 8: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.r h> = $r5
  Step 9: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: specialinvoke $r5.<com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>($r1, $r4)
  Step 10: 
    Method: <com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>
    Statement: specialinvoke $r9.<com.ijinshan.common.kinfoc.x: void <init>(com.ijinshan.common.kinfoc.r)>(r0)
  Step 11: 
    Method: <com.ijinshan.common.kinfoc.x: void <init>(com.ijinshan.common.kinfoc.r)>
    Statement: r0.<com.ijinshan.common.kinfoc.x: com.ijinshan.common.kinfoc.r a> = $r1
  Step 12: 
    Method: <com.ijinshan.common.kinfoc.x: void <init>(com.ijinshan.common.kinfoc.r)>
    Statement: return
  Step 13: 
    Method: <com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>
    Statement: r0.<com.ijinshan.common.kinfoc.r: java.lang.Runnable w> = $r9
  Step 14: 
    Method: <com.ijinshan.common.kinfoc.r: void <init>(android.content.Context,com.ijinshan.common.kinfoc.j)>
    Statement: return
  Step 15: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.r h> = $r5
  Step 16: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: return
  Step 17: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j> = $r1
  Step 18: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: throw $r2
  Step 19: 
    Method: <com.cleanmaster.security.applock.theme.main.MainApplication: void onCreate()>
    Statement: return
  Step 20: 
    Method: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
    Statement: staticinvoke <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>(null)
  Step 21: 
    Method: <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>
    Statement: virtualinvoke $r0.<com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null)
  Step 22: 
    Method: <com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void onReceive(android.content.Context,android.content.Intent)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void delayReport(android.content.Context,com.cleanmaster.security.applock.theme.c.c)>($r1, $r8)
  Step 23: 
    Method: <com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver: void delayReport(android.content.Context,com.cleanmaster.security.applock.theme.c.c)>
    Statement: virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 500L)
  Step 24: 
    Method: <android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
    Statement: interfaceinvoke param0.<java.lang.Runnable: void run()>()
  Step 25: 
    Method: <com.cleanmaster.security.applock.theme.main.i: void run()>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>($r1)
  Step 26: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 27: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: if $r1 != null goto $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 28: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = new com.ijinshan.common.kinfoc.KInfocClient
  Step 29: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: specialinvoke $r1.<com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>($r0)
  Step 30: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 31: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r3 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>($r1)
  Step 32: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>($r0)
  Step 33: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: if $r0 != null goto $r2 = newarray (byte)[255]
  Step 34: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r13.<java.io.FileOutputStream: void write(byte[],int,int)>($r2, 0, $i0)

==================================================
Source Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
Source Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
Sink Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
Sink Statement: virtualinvoke $r4.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void sendBroadcast(android.content.Intent)>($r5)
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: if $r2 == null goto return $r1
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r15 = virtualinvoke $r14.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r5)
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r11 = (java.lang.String) $r15
  Step 5: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r12.<com.cleanmaster.security.applock.theme.c.b: java.lang.String a> = $r11
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12)
  Step 7: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: return $r1
  Step 8: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>()
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
  Step 10: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r4 = (com.cleanmaster.security.applock.theme.c.b) $r3
  Step 11: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: return $r4
  Step 12: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: if $r3 != null goto $r2 = "com.cleanmaster.security"
  Step 13: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initRecommend(boolean,android.content.pm.PackageInfo)>(0, null)
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initRecommend(boolean,android.content.pm.PackageInfo)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void createThemeStoreShortcut()>()
  Step 15: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void createThemeStoreShortcut()>
    Statement: interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r1)
  Step 16: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r4.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void sendBroadcast(android.content.Intent)>($r5)

==================================================
Source Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
Source Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
Sink Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
Sink Statement: virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("cms.applock.theme.intent.action.LAUNCH_H5_THEME_STORE")
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: if $r2 == null goto return $r1
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r12 = new com.cleanmaster.security.applock.theme.main.d
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12)
  Step 5: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: return $r1
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
  Step 7: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
  Step 8: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r5 = (com.cleanmaster.security.applock.theme.main.d) $r4
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: return $r5
  Step 10: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: if $r2 != null goto return
  Step 11: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: $r3 = new android.content.Intent
  Step 12: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("cms.applock.theme.intent.action.LAUNCH_H5_THEME_STORE")

==================================================
Source Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
Source Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
Sink Method: <com.cleanmaster.security.applock.a.a: void b(java.lang.String,boolean)>
Sink Statement: $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0)
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: if $r2 == null goto return $r1
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r12.<com.cleanmaster.security.applock.theme.main.d: java.lang.String b> = $r11
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12)
  Step 5: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: return $r1
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
  Step 7: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
  Step 8: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r5 = (com.cleanmaster.security.applock.theme.main.d) $r4
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: return $r5
  Step 10: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: if $r2 != null goto return
  Step 11: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r1.<com.cleanmaster.security.applock.a.a: void h()>()
  Step 12: 
    Method: <com.cleanmaster.security.applock.a.a: void h()>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.a.a: void b(java.lang.String,boolean)>("key_theme_store_shortcut_created", 1)
  Step 13: 
    Method: <com.cleanmaster.security.applock.a.a: void b(java.lang.String,boolean)>
    Statement: $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0)

==================================================
Source Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
Source Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
Sink Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
Sink Statement: virtualinvoke $r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.android.launcher.action.INSTALL_SHORTCUT")
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: if $r2 == null goto return $r1
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r15 = virtualinvoke $r14.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r5)
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r11 = (java.lang.String) $r15
  Step 5: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r12.<com.cleanmaster.security.applock.theme.main.d: java.lang.String b> = $r11
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12)
  Step 7: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: return $r1
  Step 8: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
  Step 10: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r5 = (com.cleanmaster.security.applock.theme.main.d) $r4
  Step 11: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: return $r5
  Step 12: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: if $r2 != null goto return
  Step 13: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: $r8 = staticinvoke <android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>($r4, 2130837512)
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON_RESOURCE", $r8)
  Step 15: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.android.launcher.action.INSTALL_SHORTCUT")

==================================================
Source Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
Source Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
Sink Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
Sink Statement: virtualinvoke $r4.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void sendBroadcast(android.content.Intent)>($r5)
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: if $r2 == null goto return $r1
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r15 = virtualinvoke $r14.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r5)
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r11 = (java.lang.String) $r15
  Step 5: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: $r12.<com.cleanmaster.security.applock.theme.main.d: java.lang.String a> = $r11
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12)
  Step 7: 
    Method: <com.cleanmaster.security.applock.theme.main.c: java.util.List a(java.util.List)>
    Statement: return $r1
  Step 8: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
  Step 10: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: $r5 = (com.cleanmaster.security.applock.theme.main.d) $r4
  Step 11: 
    Method: <com.cleanmaster.security.applock.theme.main.c: com.cleanmaster.security.applock.theme.main.d a()>
    Statement: return $r5
  Step 12: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: if $r2 != null goto return
  Step 13: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: $r8 = staticinvoke <android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>($r4, 2130837512)
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON_RESOURCE", $r8)
  Step 15: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r4.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void sendBroadcast(android.content.Intent)>($r5)

==================================================
Source Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
Source Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
Sink Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
Sink Statement: virtualinvoke $r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.android.launcher.action.INSTALL_SHORTCUT")
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>($r3, 0)
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: if $r2 == null goto return $r1
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: $r12 = new com.cleanmaster.security.applock.theme.c.b
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12)
  Step 5: 
    Method: <com.cleanmaster.security.applock.theme.c.a: java.util.List a(java.util.List)>
    Statement: return $r1
  Step 6: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>()
  Step 7: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>()
  Step 8: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: $r4 = (com.cleanmaster.security.applock.theme.c.b) $r3
  Step 9: 
    Method: <com.cleanmaster.security.applock.theme.c.a: com.cleanmaster.security.applock.theme.c.b b()>
    Statement: return $r4
  Step 10: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: if $r3 != null goto $r2 = "com.cleanmaster.security"
  Step 11: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initRecommend(boolean,android.content.pm.PackageInfo)>(0, null)
  Step 12: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initRecommend(boolean,android.content.pm.PackageInfo)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void createThemeStoreShortcut()>()
  Step 13: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void createThemeStoreShortcut()>
    Statement: interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r1)
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.j: void run()>
    Statement: virtualinvoke $r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.android.launcher.action.INSTALL_SHORTCUT")

==================================================
Source Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
Source Statement: $r6 = virtualinvoke $r4.<java.util.Locale: java.lang.String getCountry()>()
Sink Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
Sink Statement: virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)
Taint Path:
  Step 1: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r6 = virtualinvoke $r4.<java.util.Locale: java.lang.String getCountry()>()
  Step 2: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
  Step 3: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 4: 
    Method: <com.cleanmaster.security.applock.theme.c.e: java.lang.String a()>
    Statement: return $r6
  Step 5: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r4 = $r2
  Step 6: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 7: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 8: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: return $r2
  Step 9: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: r0.<com.ijinshan.common.kinfoc.KInfocClient: java.lang.String c> = $r3
  Step 10: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: return
  Step 11: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j> = $r1
  Step 12: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 13: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: return $r1
  Step 14: 
    Method: <com.cleanmaster.security.applock.theme.main.i: void run()>
    Statement: virtualinvoke $r2.<com.ijinshan.common.kinfoc.KInfocClient: void a(java.lang.String,java.lang.String,boolean)>("cmsecurity_applock_theme_apk", $r5, $z0)
  Step 15: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void a(java.lang.String,java.lang.String,boolean)>
    Statement: return
  Step 16: 
    Method: <com.cleanmaster.security.applock.theme.main.i: void run()>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>($r1)
  Step 17: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 18: 
    Method: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
    Statement: staticinvoke <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>(null)
  Step 19: 
    Method: <dummyMainClass: com.cleanmaster.security.applock.theme.main.InstallReferrerReceiver dummyMainMethod_com_cleanmaster_security_applock_theme_main_InstallReferrerReceiver(android.content.Intent)>
    Statement: return $r0
  Step 20: 
    Method: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
    Statement: staticinvoke <dummyMainClass: com.cleanmaster.security.applock.theme.main.ThemeMainActivity dummyMainMethod_com_cleanmaster_security_applock_theme_main_ThemeMainActivity(android.content.Intent)>(null)
  Step 21: 
    Method: <dummyMainClass: com.cleanmaster.security.applock.theme.main.ThemeMainActivity dummyMainMethod_com_cleanmaster_security_applock_theme_main_ThemeMainActivity(android.content.Intent)>
    Statement: virtualinvoke $r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>(null)
  Step 22: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void onCreate(android.os.Bundle)>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initSorry()>()
  Step 23: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void initSorry()>
    Statement: specialinvoke r0.<com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void delayReport(com.cleanmaster.security.applock.theme.c.c,boolean)>($r5, 0)
  Step 24: 
    Method: <com.cleanmaster.security.applock.theme.main.ThemeMainActivity: void delayReport(com.cleanmaster.security.applock.theme.c.c,boolean)>
    Statement: virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 500L)
  Step 25: 
    Method: <com.cleanmaster.security.applock.theme.main.i: void run()>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>($r1)
  Step 26: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 27: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: if $r1 != null goto $r1 = <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient j>
  Step 28: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: $r1 = new com.ijinshan.common.kinfoc.KInfocClient
  Step 29: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: com.ijinshan.common.kinfoc.KInfocClient a(android.content.Context)>
    Statement: specialinvoke $r1.<com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>($r0)
  Step 30: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r1 = r0.<com.ijinshan.common.kinfoc.KInfocClient: android.content.Context a>
  Step 31: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: void <init>(android.content.Context)>
    Statement: $r3 = staticinvoke <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>($r1)
  Step 32: 
    Method: <com.ijinshan.common.kinfoc.KInfocClient: java.lang.String b(android.content.Context)>
    Statement: $r2 = staticinvoke <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>($r0)
  Step 33: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: if $r0 != null goto $r2 = newarray (byte)[255]
  Step 34: 
    Method: <com.ijinshan.common.kinfoc.n: java.lang.String b(android.content.Context)>
    Statement: virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0)

==================================================

15 paths in total.

==================================================
