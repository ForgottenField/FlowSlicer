Results from file: result.xml
Source Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
Source Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
Sink Statement: virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept", "application/json;text/html;text/plain")
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: $r6 = (java.net.HttpURLConnection) $r5
  Step 3: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept", "application/json;text/html;text/plain")

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String lac> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.squareup.picasso.Dispatcher: void dispatchSubmit(com.squareup.picasso.Action)>
Source Statement: $r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r1)
Sink Method: <com.squareup.picasso.Dispatcher: void dispatchSubmit(com.squareup.picasso.Action)>
Sink Statement: virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3)
Taint Path:
  Step 1: 
    Method: <com.squareup.picasso.Dispatcher: void dispatchSubmit(com.squareup.picasso.Action)>
    Statement: $r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r1)
  Step 2: 
    Method: <com.squareup.picasso.Dispatcher: void dispatchSubmit(com.squareup.picasso.Action)>
    Statement: virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3)

==================================================
Source Method: <com.squareup.picasso.Dispatcher: void dispatchNetworkStateChange(android.net.NetworkInfo)>
Source Statement: $r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(9, $r1)
Sink Method: <com.squareup.picasso.Dispatcher: void dispatchNetworkStateChange(android.net.NetworkInfo)>
Sink Statement: virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3)
Taint Path:
  Step 1: 
    Method: <com.squareup.picasso.Dispatcher: void dispatchNetworkStateChange(android.net.NetworkInfo)>
    Statement: $r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(9, $r1)
  Step 2: 
    Method: <com.squareup.picasso.Dispatcher: void dispatchNetworkStateChange(android.net.NetworkInfo)>
    Statement: virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
Source Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: if $r7 == null goto (branch)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r9 = staticinvoke <com.startapp.android.publish.common.commonUtils.b: java.util.List a(android.content.Context,android.net.wifi.WifiManager)>($r1, $r4)
  Step 4: 
    Method: <com.startapp.android.publish.common.commonUtils.b: java.util.List a(android.content.Context,android.net.wifi.WifiManager)>
    Statement: $z1 = staticinvoke <com.startapp.android.publish.common.commonUtils.b: boolean a(android.content.Context,java.lang.String)>($r0, "android.permission.ACCESS_FINE_LOCATION")
  Step 5: 
    Method: <com.startapp.android.publish.common.commonUtils.b: boolean a(android.content.Context,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(int,java.lang.String)>(6, $r1)
  Step 6: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(int,java.lang.String,java.lang.Throwable)>($i0, $r0, null)
  Step 7: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>(null, $i0, $r0, $r1)
  Step 8: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 9: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
Source Statement: $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
Sink Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
Sink Statement: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Buffer Error", $r7)
Taint Path:
  Step 1: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
  Step 2: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r12 = interfaceinvoke $r11.<org.apache.http.HttpEntity: java.io.InputStream getContent()>()
  Step 3: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: <com.cdg.manformalshirt.utility.JSONParser: java.io.InputStream is> = $r12
  Step 4: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r12 = <com.cdg.manformalshirt.utility.JSONParser: java.io.InputStream is>
  Step 5: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: specialinvoke $r24.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r12, "iso-8859-1")
  Step 6: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r13 = $r24
  Step 7: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: specialinvoke $r25.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r13, 8)
  Step 8: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: r5 = $r25
  Step 9: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r7 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()
  Step 10: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: if $r7 != null goto $r28 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r7 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Buffer Error", $r7)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
Source Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: if $r7 == null goto (branch)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r9 = staticinvoke <com.startapp.android.publish.common.commonUtils.b: java.util.List a(android.content.Context,android.net.wifi.WifiManager)>($r1, $r4)
  Step 4: 
    Method: <com.startapp.android.publish.common.commonUtils.b: java.util.List a(android.content.Context,android.net.wifi.WifiManager)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("ApiUtil", 3, "Unable to get WIFI scan results: API level >= 23 but no location permission granted")
  Step 5: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 6: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 7: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.squareup.picasso.Dispatcher: void dispatchCancel(com.squareup.picasso.Action)>
Source Statement: $r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r1)
Sink Method: <com.squareup.picasso.Dispatcher: void dispatchCancel(com.squareup.picasso.Action)>
Sink Statement: virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3)
Taint Path:
  Step 1: 
    Method: <com.squareup.picasso.Dispatcher: void dispatchCancel(com.squareup.picasso.Action)>
    Statement: $r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r1)
  Step 2: 
    Method: <com.squareup.picasso.Dispatcher: void dispatchCancel(com.squareup.picasso.Action)>
    Statement: virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String lac> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String lac> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
Sink Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String cid> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>($r0, $r4, $r2, $r3)
  Step 13: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: $r5 = staticinvoke <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>($r0, $r1, null, $r2)
  Step 14: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()

==================================================
Source Method: <com.squareup.picasso.Picasso$CleanupThread: void run()>
Source Statement: $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r1)
Sink Method: <com.squareup.picasso.Picasso$CleanupThread: void run()>
Sink Statement: virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r7)
Taint Path:
  Step 1: 
    Method: <com.squareup.picasso.Picasso$CleanupThread: void run()>
    Statement: $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r1)
  Step 2: 
    Method: <com.squareup.picasso.Picasso$CleanupThread: void run()>
    Statement: virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r7)

==================================================
Source Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
Source Statement: $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r1, 0)
Sink Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
Sink Statement: virtualinvoke $r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r10)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
    Statement: $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r1, 0)
  Step 2: 
    Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
    Statement: $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
  Step 3: 
    Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
    Statement: $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>()
  Step 4: 
    Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
    Statement: $r6 = (android.content.pm.ResolveInfo) $r5
  Step 5: 
    Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
    Statement: $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>
  Step 6: 
    Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
    Statement: $r9 = $r7.<android.content.pm.ActivityInfo: java.lang.String name>
  Step 7: 
    Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
    Statement: specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r8, $r9)
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.b: void a(android.content.Context,android.content.Intent)>
    Statement: virtualinvoke $r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r10)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String cid> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String cid> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String cid> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
Sink Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String lac> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>($r0, $r4, $r2, $r3)
  Step 13: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: $r5 = staticinvoke <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>($r0, $r1, null, $r2)
  Step 14: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String lac> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
Source Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
Sink Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: if $r7 == null goto (branch)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setWfScanRes(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setWfScanRes(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String wfScanRes> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setWfScanRes(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>($r0, $r4, $r2, $r3)
  Step 13: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: $r5 = staticinvoke <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>($r0, $r1, null, $r2)
  Step 14: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
Source Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: if $r7 == null goto (branch)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r9 = staticinvoke <com.startapp.android.publish.common.commonUtils.b: java.util.List a(android.content.Context,android.net.wifi.WifiManager)>($r1, $r4)
  Step 4: 
    Method: <com.startapp.android.publish.common.commonUtils.b: java.util.List a(android.content.Context,android.net.wifi.WifiManager)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("ApiUtil", 3, "Unable to get WIFI scan results: API level >= 23 but no location permission granted")
  Step 5: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 6: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 7: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
Source Statement: $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
Sink Method: <com.cdg.manformalshirt.MenuActivity$loadTemplateList: java.lang.String doInBackground(java.lang.Void[])>
Sink Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("data", $r9)
Taint Path:
  Step 1: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
  Step 2: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r12 = interfaceinvoke $r11.<org.apache.http.HttpEntity: java.io.InputStream getContent()>()
  Step 3: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: <com.cdg.manformalshirt.utility.JSONParser: java.io.InputStream is> = $r12
  Step 4: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r12 = <com.cdg.manformalshirt.utility.JSONParser: java.io.InputStream is>
  Step 5: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: specialinvoke $r24.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r12, "iso-8859-1")
  Step 6: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r13 = $r24
  Step 7: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: specialinvoke $r25.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r13, 8)
  Step 8: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: r5 = $r25
  Step 9: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r7 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()
  Step 10: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: if $r7 != null goto $r28 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: <com.cdg.manformalshirt.utility.JSONParser: java.lang.String json> = $r7
  Step 12: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r7 = <com.cdg.manformalshirt.utility.JSONParser: java.lang.String json>
  Step 13: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: specialinvoke $r26.<org.json.JSONObject: void <init>(java.lang.String)>($r7)
  Step 14: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject jObj> = $r26
  Step 15: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r14 = <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject jObj>
  Step 16: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: return $r14
  Step 17: 
    Method: <com.cdg.manformalshirt.MenuActivity$loadTemplateList: java.lang.String doInBackground(java.lang.Void[])>
    Statement: $r6 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>()
  Step 18: 
    Method: <com.cdg.manformalshirt.MenuActivity$loadTemplateList: java.lang.String doInBackground(java.lang.Void[])>
    Statement: $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
  Step 19: 
    Method: <com.cdg.manformalshirt.MenuActivity$loadTemplateList: java.lang.String doInBackground(java.lang.Void[])>
    Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 20: 
    Method: <com.cdg.manformalshirt.MenuActivity$loadTemplateList: java.lang.String doInBackground(java.lang.Void[])>
    Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("data", $r9)

==================================================
Source Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
Source Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
Sink Statement: virtualinvoke $r9.<java.io.Writer: void write(char[],int,int)>($r10, 0, $i0)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: $r6 = (java.net.HttpURLConnection) $r5
  Step 3: 
    Method: <com.startapp.android.publish.common.commonUtils.j: java.net.HttpURLConnection b(android.content.Context,java.lang.String,byte[],java.util.Map)>
    Statement: return $r6
  Step 4: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: $r8 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
  Step 5: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r8, "UTF-8")
  Step 6: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: $r12 = $r19
  Step 7: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: specialinvoke $r20.<java.io.BufferedReader: void <init>(java.io.Reader)>($r12)
  Step 8: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: $r11 = $r20
  Step 9: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: $i0 = virtualinvoke $r11.<java.io.Reader: int read(char[])>($r10)
  Step 10: 
    Method: <com.startapp.android.publish.common.commonUtils.j: boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder)>
    Statement: virtualinvoke $r9.<java.io.Writer: void write(char[],int,int)>($r10, 0, $i0)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getLac()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String lac> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setLac(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
Source Statement: $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
Sink Method: <com.cdg.manformalshirt.MenuActivity$loaddata: java.lang.String doInBackground(java.lang.Void[])>
Sink Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("data", $r8)
Taint Path:
  Step 1: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
  Step 2: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r12 = interfaceinvoke $r11.<org.apache.http.HttpEntity: java.io.InputStream getContent()>()
  Step 3: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: <com.cdg.manformalshirt.utility.JSONParser: java.io.InputStream is> = $r12
  Step 4: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r12 = <com.cdg.manformalshirt.utility.JSONParser: java.io.InputStream is>
  Step 5: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: specialinvoke $r24.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r12, "iso-8859-1")
  Step 6: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r13 = $r24
  Step 7: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: specialinvoke $r25.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r13, 8)
  Step 8: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: r5 = $r25
  Step 9: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r7 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()
  Step 10: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: if $r7 != null goto $r28 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
  Step 13: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r7 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: <com.cdg.manformalshirt.utility.JSONParser: java.lang.String json> = $r7
  Step 15: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: return $r14
  Step 16: 
    Method: <com.cdg.manformalshirt.MenuActivity$loadTemplateList: java.lang.String doInBackground(java.lang.Void[])>
    Statement: return ""
  Step 17: 
    Method: <com.cdg.manformalshirt.MenuActivity$loadTemplateList: java.lang.Object doInBackground(java.lang.Object[])>
    Statement: return $r1
  Step 18: 
    Method: <com.cdg.manformalshirt.MenuActivity: void onResume()>
    Statement: return
  Step 19: 
    Method: <dummyMainClass: com.cdg.manformalshirt.MenuActivity dummyMainMethod_com_cdg_manformalshirt_MenuActivity(android.content.Intent)>
    Statement: virtualinvoke $r0.<com.cdg.manformalshirt.MenuActivity: void onResume()>()
  Step 20: 
    Method: <com.cdg.manformalshirt.MenuActivity: void onResume()>
    Statement: virtualinvoke $r3.<com.cdg.manformalshirt.MenuActivity$loaddata: android.os.AsyncTask execute(java.lang.Object[])>($r4)
  Step 21: 
    Method: <com.cdg.manformalshirt.MenuActivity$loaddata: java.lang.Object doInBackground(java.lang.Object[])>
    Statement: $r1 = virtualinvoke r0.<com.cdg.manformalshirt.MenuActivity$loaddata: java.lang.String doInBackground(java.lang.Void[])>($r3)
  Step 22: 
    Method: <com.cdg.manformalshirt.MenuActivity$loaddata: java.lang.String doInBackground(java.lang.Void[])>
    Statement: $r6 = virtualinvoke $r4.<com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>($r5, "POST", r2)
  Step 23: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r7 = <com.cdg.manformalshirt.utility.JSONParser: java.lang.String json>
  Step 24: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: specialinvoke $r26.<org.json.JSONObject: void <init>(java.lang.String)>($r7)
  Step 25: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject jObj> = $r26
  Step 26: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: $r14 = <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject jObj>
  Step 27: 
    Method: <com.cdg.manformalshirt.utility.JSONParser: org.json.JSONObject makeHttpRequest(java.lang.String,java.lang.String,java.util.List)>
    Statement: return $r14
  Step 28: 
    Method: <com.cdg.manformalshirt.MenuActivity$loaddata: java.lang.String doInBackground(java.lang.Void[])>
    Statement: $r5 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String toString()>()
  Step 29: 
    Method: <com.cdg.manformalshirt.MenuActivity$loaddata: java.lang.String doInBackground(java.lang.Void[])>
    Statement: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
  Step 30: 
    Method: <com.cdg.manformalshirt.MenuActivity$loaddata: java.lang.String doInBackground(java.lang.Void[])>
    Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 31: 
    Method: <com.cdg.manformalshirt.MenuActivity$loaddata: java.lang.String doInBackground(java.lang.Void[])>
    Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("data", $r8)

==================================================
Source Method: <com.squareup.picasso.Dispatcher: void dispatchAirplaneModeChange(boolean)>
Source Statement: $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(10, $b0, 0)
Sink Method: <com.squareup.picasso.Dispatcher: void dispatchAirplaneModeChange(boolean)>
Sink Statement: virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3)
Taint Path:
  Step 1: 
    Method: <com.squareup.picasso.Dispatcher: void dispatchAirplaneModeChange(boolean)>
    Statement: $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(10, $b0, 0)
  Step 2: 
    Method: <com.squareup.picasso.Dispatcher: void dispatchAirplaneModeChange(boolean)>
    Statement: virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String cid> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
Source Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $i0 = virtualinvoke $r4.<android.telephony.gsm.GsmCellLocation: int getCid()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String cid> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setCid(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillCellLocationDetails(android.content.Context,android.telephony.TelephonyManager)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
Source Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: if $r7 == null goto (branch)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: virtualinvoke r0.<com.startapp.android.publish.common.BaseRequest: void setBssid(java.lang.String)>($r5)
  Step 4: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setBssid(java.lang.String)>
    Statement: r0.<com.startapp.android.publish.common.BaseRequest: java.lang.String bssid> = $r1
  Step 5: 
    Method: <com.startapp.android.publish.common.BaseRequest: void setBssid(java.lang.String)>
    Statement: return
  Step 6: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: return
  Step 7: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillApplicationDetails(android.content.Context,com.startapp.android.publish.common.model.AdPreferences)>
    Statement: return
  Step 8: 
    Method: <com.startapp.android.publish.adsCommon.j$2: void run()>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>($r3, $r5, $r1, null)
  Step 9: 
    Method: <com.startapp.android.publish.common.c.c: java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map)>
    Statement: staticinvoke <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>($r0, $r1, $r2, null, $r4, 3, 0L)
  Step 10: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: if $r1 == null goto $r9 = new java.lang.StringBuilder
  Step 11: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 12: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
  Step 13: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
  Step 14: 
    Method: <com.startapp.android.publish.common.c.c: void a(android.content.Context,java.lang.String,com.startapp.android.publish.common.BaseRequest,java.util.Map,java.lang.StringBuilder,int,long)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("Transport", 3, $r6)
  Step 15: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 16: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 17: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================
Source Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
Source Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
Sink Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
Sink Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)
Taint Path:
  Step 1: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>()
  Step 2: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: if $r7 == null goto (branch)
  Step 3: 
    Method: <com.startapp.android.publish.common.BaseRequest: void fillWifiDetails(android.content.Context)>
    Statement: $r9 = staticinvoke <com.startapp.android.publish.common.commonUtils.b: java.util.List a(android.content.Context,android.net.wifi.WifiManager)>($r1, $r4)
  Step 4: 
    Method: <com.startapp.android.publish.common.commonUtils.b: java.util.List a(android.content.Context,android.net.wifi.WifiManager)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>("ApiUtil", 3, "Unable to get WIFI scan results: API level >= 23 but no location permission granted")
  Step 5: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, null)
  Step 6: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void a(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>($r0, $i0, $r1, $r2)
  Step 7: 
    Method: <com.startapp.android.publish.common.commonUtils.i: void b(java.lang.String,int,java.lang.String,java.lang.Throwable)>
    Statement: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2)

==================================================

29 paths in total.

==================================================
